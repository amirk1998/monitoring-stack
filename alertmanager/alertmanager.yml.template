global:
  resolve_timeout: 5m
  smtp_from: "${SMTP_FROM}"
  smtp_smarthost: "${SMTP_SMARTHOST}"
  smtp_auth_username: "${SMTP_AUTH_USERNAME}"
  smtp_auth_password: "${SMTP_AUTH_PASSWORD}"
  smtp_require_tls: false

templates:
  - "/etc/alertmanager/template/*.tmpl"

route:
  group_by: ["alertname", "instance", "severity"]
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: "email-notifications"
  routes:
    - match:
        severity: critical
      receiver: "critical-notifications"
      continue: true
    - match:
        severity: warning
      receiver: "email-notifications"

receivers:
  - name: "email-notifications"
    email_configs:
      - to: "${ALERT_EMAIL_TO}"
        send_resolved: true

  - name: "critical-notifications"
    email_configs:
      - to: "${ALERT_EMAIL_TO}"
        send_resolved: true
    slack_configs:
      - api_url: "${SLACK_WEBHOOK_URL}"
        channel: "#alerts"
        send_resolved: true
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Alert'
        text: >-
          {{ range .Alerts }}
            *Alert:* {{ .Annotations.summary }}
            *Description:* {{ .Annotations.description }}
            *Severity:* {{ .Labels.severity }}
          {{ end }}

inhibit_rules:
  - source_match:
      severity: "critical"
    target_match:
      severity: "warning"
    equal: ["alertname", "instance"]
